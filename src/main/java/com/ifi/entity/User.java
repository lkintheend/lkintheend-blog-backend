package com.ifi.entity;
// Generated Oct 1, 2018 4:26:22 PM by Hibernate Tools 5.2.11.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "tryhardmore")
public class User implements java.io.Serializable {

	private Integer userProfileId;
	private UserProfile userProfile;
	private String email;
	private String password;
	private String passwordSalt;
	private String passwordHashAlgorithm;
	private String passwordReminderToken;
	private Date passwordReminderExpire;
	private String emailConfirmToken;
	private Integer userStatus;

	public User() {
	}

	public User(UserProfile userProfile, String email, String password, String passwordSalt) {
		this.userProfile = userProfile;
		this.email = email;
		this.password = password;
		this.passwordSalt = passwordSalt;
	}

	public User(UserProfile userProfile, String email, String password, String passwordSalt,
			String passwordHashAlgorithm, String passwordReminderToken, Date passwordReminderExpire,
			String emailConfirmToken, Integer userStatus) {
		this.userProfile = userProfile;
		this.email = email;
		this.password = password;
		this.passwordSalt = passwordSalt;
		this.passwordHashAlgorithm = passwordHashAlgorithm;
		this.passwordReminderToken = passwordReminderToken;
		this.passwordReminderExpire = passwordReminderExpire;
		this.emailConfirmToken = emailConfirmToken;
		this.userStatus = userStatus;
	}

	@GenericGenerator(name = "com.ifi.entity.UserIdGenerator", strategy = "foreign", parameters = @Parameter(name = "property", value = "userProfile"))
	@Id
	@GeneratedValue(generator = "com.ifi.entity.UserIdGenerator")

	@Column(name = "user_profile_id", unique = true, nullable = false)
	public Integer getUserProfileId() {
		return this.userProfileId;
	}

	public void setUserProfileId(Integer userProfileId) {
		this.userProfileId = userProfileId;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public UserProfile getUserProfile() {
		return this.userProfile;
	}

	public void setUserProfile(UserProfile userProfile) {
		this.userProfile = userProfile;
	}

	@Column(name = "email", nullable = false, length = 254)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "password", nullable = false, length = 200)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "password_salt", nullable = false, length = 50)
	public String getPasswordSalt() {
		return this.passwordSalt;
	}

	public void setPasswordSalt(String passwordSalt) {
		this.passwordSalt = passwordSalt;
	}

	@Column(name = "password_hash_algorithm", length = 50)
	public String getPasswordHashAlgorithm() {
		return this.passwordHashAlgorithm;
	}

	public void setPasswordHashAlgorithm(String passwordHashAlgorithm) {
		this.passwordHashAlgorithm = passwordHashAlgorithm;
	}

	@Column(name = "password_reminder_token", length = 100)
	public String getPasswordReminderToken() {
		return this.passwordReminderToken;
	}

	public void setPasswordReminderToken(String passwordReminderToken) {
		this.passwordReminderToken = passwordReminderToken;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "password_reminder_expire", length = 19)
	public Date getPasswordReminderExpire() {
		return this.passwordReminderExpire;
	}

	public void setPasswordReminderExpire(Date passwordReminderExpire) {
		this.passwordReminderExpire = passwordReminderExpire;
	}

	@Column(name = "email_confirm_token", length = 100)
	public String getEmailConfirmToken() {
		return this.emailConfirmToken;
	}

	public void setEmailConfirmToken(String emailConfirmToken) {
		this.emailConfirmToken = emailConfirmToken;
	}

	@Column(name = "user_status")
	public Integer getUserStatus() {
		return this.userStatus;
	}

	public void setUserStatus(Integer userStatus) {
		this.userStatus = userStatus;
	}

}
