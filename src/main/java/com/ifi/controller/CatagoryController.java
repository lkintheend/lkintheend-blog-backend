/*
 * Created on 2018-10-01 ( Date ISO 2018-10-01 - Time 16:29:37 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
*/
package com.ifi.controller;

import com.ifi.entity.Catagory;
import com.ifi.service.CatagoryServiceImpl;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.http.MediaType;

@RestController
@CrossOrigin(origins = "*")
@RequestMapping(value = "/catagory", produces = "application/hal+json")
public class CatagoryController {

	private static final Logger LOGGER = LoggerFactory.getLogger(CatagoryController.class);

	private static final String NOT_FOUND ="Catagory not found";

	@Autowired
	private CatagoryServiceImpl catagoryService;

	@RequestMapping(value = "/",
			produces = { MediaType.APPLICATION_JSON_VALUE })
	public List<Catagory> findAll() {
		List<Catagory> list = catagoryService.findAll();
		return list;
	}


	@GetMapping("{id}")
	public Catagory get(@PathVariable("id") Integer id) {
		final Catagory catagory = catagoryService.getOne(id);
		LOGGER.info("Catagory found : {}", catagory);
		return catagory;
	}

	@PostMapping(consumes = "application/json")
	public Catagory create(@RequestBody Catagory catagory) {
		LOGGER.info("Catagory creation request : {}", catagory);
		if (catagoryService.exist(catagory)) {
			LOGGER.info("Catagory already exist ! : {}", catagory);
			return null;
		} else {
			final Catagory created = catagoryService.create(catagory);
			LOGGER.info("Created catagory {}", created);
			return created;
		}
	}

	@PutMapping(value = "{id}", consumes = "application/json")
	public Catagory update(@PathVariable("id") Integer id, @RequestBody Catagory catagory) {
		return catagoryService.update(catagory);
	}

	@DeleteMapping("{id}")
	public void delete(@PathVariable("id") Integer id) {
		LOGGER.info("Catagory deletion request : {}", resolveIdForLogger(id));
		if (catagoryService.delete(id)) {
			LOGGER.info("Catagory succesfully deleted");
		} else {
			LOGGER.info(NOT_FOUND);
		}
	}

	private String resolveIdForLogger(Integer id) {
		final StringBuilder ids = new StringBuilder();
		ids.append(String.valueOf(id));
		return ids.toString();
	}

}

