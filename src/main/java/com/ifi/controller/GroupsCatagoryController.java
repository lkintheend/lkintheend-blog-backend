/*
 * Created on 2018-10-01 ( Date ISO 2018-10-01 - Time 16:29:37 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
*/
package com.ifi.controller;

import com.ifi.entity.GroupsCatagory;
import com.ifi.service.GroupsCatagoryServiceImpl;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.http.MediaType;

@RestController
@CrossOrigin(origins = "*")
@RequestMapping(value = "/groupsCatagory", produces = "application/hal+json")
public class GroupsCatagoryController {

	private static final Logger LOGGER = LoggerFactory.getLogger(GroupsCatagoryController.class);

	private static final String NOT_FOUND ="GroupsCatagory not found";

	@Autowired
	private GroupsCatagoryServiceImpl groupsCatagoryService;

	@RequestMapping(value = "/",
			produces = { MediaType.APPLICATION_JSON_VALUE })
	public List<GroupsCatagory> findAll() {
		List<GroupsCatagory> list = groupsCatagoryService.findAll();
		return list;
	}


	@GetMapping("{id}")
	public GroupsCatagory get(@PathVariable("id") Integer id) {
		final GroupsCatagory groupsCatagory = groupsCatagoryService.getOne(id);
		LOGGER.info("GroupsCatagory found : {}", groupsCatagory);
		return groupsCatagory;
	}

	@PostMapping(consumes = "application/json")
	public GroupsCatagory create(@RequestBody GroupsCatagory groupsCatagory) {
		LOGGER.info("GroupsCatagory creation request : {}", groupsCatagory);
		if (groupsCatagoryService.exist(groupsCatagory)) {
			LOGGER.info("GroupsCatagory already exist ! : {}", groupsCatagory);
			return null;
		} else {
			final GroupsCatagory created = groupsCatagoryService.create(groupsCatagory);
			LOGGER.info("Created groupsCatagory {}", created);
			return created;
		}
	}

	@PutMapping(value = "{id}", consumes = "application/json")
	public GroupsCatagory update(@PathVariable("id") Integer id, @RequestBody GroupsCatagory groupsCatagory) {
		return groupsCatagoryService.update(groupsCatagory);
	}

	@DeleteMapping("{id}")
	public void delete(@PathVariable("id") Integer id) {
		LOGGER.info("GroupsCatagory deletion request : {}", resolveIdForLogger(id));
		if (groupsCatagoryService.delete(id)) {
			LOGGER.info("GroupsCatagory succesfully deleted");
		} else {
			LOGGER.info(NOT_FOUND);
		}
	}

	private String resolveIdForLogger(Integer id) {
		final StringBuilder ids = new StringBuilder();
		ids.append(String.valueOf(id));
		return ids.toString();
	}

}

